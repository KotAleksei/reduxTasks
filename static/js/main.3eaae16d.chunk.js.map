{"version":3,"sources":["components/orderingFood/foodReducer.js","components/store.js","components/orderingFood/Food.js","App.js","index.js"],"names":["Array","prototype","move","index","step","saveThis","this","next","moveUp","items","type","moveDown","foodReducer","state","action","console","log","itemMove","foods","indexOf","getFoods","getItemMove","getIndex","reducer","combineReducers","store","createStore","connect","dispatch","order","food","disabled","onClick","map","key","length","HomePage","App","to","exact","path","component","Food","ReactDOM","render","document","getElementById"],"mappings":"k0BAKAA,MAAMC,UAAUC,KAAO,SAAUC,EAAOC,GACtC,IAAMC,EAAQ,YAAOC,MACjBC,EAAOF,EAASF,EAAQC,GAG5B,OAFAC,EAASF,EAAQC,GAAQC,EAASF,GAClCE,EAASF,GAASI,EACXF,GAGF,IAGMG,EAAS,SAACC,EAAON,GAC5B,MAAO,CACLO,KAlBY,UAmBZD,MAAOA,EAAMP,KAAKC,GAAQ,GAC1BA,MAAOA,EAAQ,IAINQ,EAAW,SAACF,EAAON,GAAR,MAAmB,CACzCO,KAxBgB,YAyBhBD,MAAOA,EAAMP,KAAKC,EAAO,GACzBA,MAAOA,EAAQ,IA6BFS,EA1BM,WAA0B,IAAzBC,EAAwB,uDAAhB,GAAIC,EAAY,uCAE5C,OADCC,QAAQC,IAAKF,GACPA,EAAOJ,MACZ,IA/BU,QAgCR,OAAO,EAAP,GACKG,EADL,CAEEI,SAAUH,EAAOG,SACjBd,MAAOU,EAAMK,MAAMC,QAAQL,EAAOG,YAEtC,IAtCc,YA4Cd,IA7CY,UA8CV,OAAO,EAAP,GACKJ,EADL,CAEEJ,MAAOK,EAAOL,MACdN,MAAOW,EAAOX,QAElB,QACE,OAAOU,IChDAO,EAAW,SAAAP,GAAK,OAAIA,EAAMK,MAAMA,OAChCG,EAAc,SAAAR,GAAK,OAAIA,EAAMK,MAAMD,UACnCK,EAAW,SAAAT,GAAK,OAAIA,EAAMK,MAAMf,OAEvCoB,EAAUC,YAAgB,CAC9BN,MAAON,IAYMa,EAFDC,YAAYH,EAPL,CACnBL,MAAO,CACLA,MAAO,CAAC,QAAS,QAAS,SAAU,YAAa,OAAQ,OAAQ,SAAU,QAAS,YAAa,OACjGD,SAAU,GACVd,MAAO,QC0BIwB,eAZC,SAAAd,GAAK,MAAK,CACxBK,MAAOE,EAASP,GAChBV,MAAOmB,EAAST,GAChBI,SAAUI,EAAYR,OAGL,SAAAe,GAAQ,MAAK,CAC9BC,MAAO,SAACC,GAAD,OAAUF,EFxBa,CAAClB,KAXnB,QAWgCO,SEwBZa,KAChCtB,OAAQ,SAACU,EAAOf,GAAR,OAAkByB,EAASpB,EAAOU,EAAOf,KACjDQ,SAAU,SAACO,EAAOf,GAAR,OAAkByB,EAASjB,EAASO,EAAOf,QAGxCwB,EArCF,SAAC,GAAqC,IAApCT,EAAmC,EAAnCA,MAAOf,EAA4B,EAA5BA,MAAOc,EAAqB,EAArBA,SAAUY,EAAW,EAAXA,MAErC,OACE,oCACE,4BAAQE,WAAUd,GAAYd,EAAQ,GAAkB6B,QAAS,kBAAMxB,EAAOU,EAAOf,KAArF,WAGA,4BACIe,EAAMe,KAAI,SAAAH,GAAI,OACZ,wBACEI,IAAKJ,EACLE,QAAS,kBAAMH,EAAMC,KAEnBA,OAIV,4BAAQC,WAAUd,GAAYd,EAAQe,EAAMiB,OAAS,GAAkBH,QAAS,kBAAMrB,EAASO,EAAOf,KAAtG,iBCUN,IAAMiC,EAAW,kBAAM,0CAGRC,EAxBf,WACE,OACE,kBAAC,IAAD,KACE,6BACE,4BACE,4BACE,kBAAC,IAAD,CAASC,GAAG,IAAIC,OAAK,GAArB,SAEF,4BACE,kBAAC,IAAD,CAASD,GAAG,SAAZ,WAIN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,KAAK,IAAID,OAAK,EAACE,UAAWL,IACjC,kBAAC,IAAD,CAAOI,KAAK,QAAQC,UAAWC,OCpBvCC,IAASC,OACP,kBAAC,IAAD,CAAUnB,MAAOA,GACf,kBAAC,EAAD,OAEAoB,SAASC,eAAe,W","file":"static/js/main.3eaae16d.chunk.js","sourcesContent":["const MOVE_UP = 'MOVE_UP';\nconst MOVE_DOWN = 'MOVE_DOWN';\nconst ORDER = 'ORDER';\n\n\nArray.prototype.move = function (index, step) {\n  const saveThis = [...this];\n  let next = saveThis[index + step];\n  saveThis[index + step] = saveThis[index];\n  saveThis[index] = next;\n  return saveThis;\n}\n\nexport const order = (item) => ({type: ORDER, itemMove: item})\n\n\nexport const moveUp = (items, index) => {\n  return {\n    type: MOVE_UP,\n    items: items.move(index, -1),\n    index: index - 1\n  }\n}\n\nexport const moveDown = (items, index) => ({\n  type: MOVE_DOWN,\n  items: items.move(index, 1),\n  index: index + 1\n});\n\n const foodReducer = (state = {}, action ) => {\n   console.log( action);\n  switch(action.type) {\n    case ORDER: \n      return {\n        ...state,\n        itemMove: action.itemMove,\n        index: state.foods.indexOf(action.itemMove)\n      };\n    case MOVE_DOWN: \n      return {\n        ...state,\n        items: action.items,\n        index: action.index\n      };\n    case MOVE_UP:\n      return {\n        ...state,\n        items: action.items,\n        index: action.index\n      };\n    default:\n      return state;\n  }\n}\n\nexport default foodReducer;","import { createStore, combineReducers } from 'redux';\nimport foodReducer from './orderingFood/foodReducer';\n\n\nexport const getFoods = state => state.foods.foods;\nexport const getItemMove = state => state.foods.itemMove;\nexport const getIndex = state => state.foods.index;\n\nconst reducer = combineReducers({\n  foods: foodReducer\n})\n\nconst initialState = {\n  foods: {\n    foods: ['Apple', 'Bread', 'Carrot', 'Dumplings', 'Eggs', 'Fish', 'Carlic', 'Honey', 'Ice Cream', 'Jam'],\n    itemMove: '',\n    index: null,\n  }\n};\nconst store = createStore(reducer, initialState);\n\nexport default store;","import React from 'react';\nimport { connect } from 'react-redux'; \nimport { getFoods, getIndex, getItemMove } from '../store';\nimport { order, moveUp, moveDown } from './foodReducer';\n\nconst Food = ({foods, index, itemMove, order}) => {\n  // console.log(itemMove, index);\n  return (\n    <>\n      <button disabled={itemMove && index > 0 ? false : true} onClick={() => moveUp(foods, index)} >\n        Move Up\n      </button>\n      <ul>\n        { foods.map(food => (\n            <li \n              key={food}\n              onClick={() => order(food)}\n            >\n              { food }\n            </li>\n          )) }\n      </ul>\n      <button disabled={itemMove && index < foods.length - 1 ? false : true} onClick={() => moveDown(foods, index)}> \n          Move Down\n      </button>\n    </>\n  )\n}\n\n\nconst getData = state => ({\n  foods: getFoods(state),\n  index: getIndex(state),\n  itemMove: getItemMove(state)\n})\n\nconst getMethods = dispatch => ({\n  order: (food) => dispatch(order(food)),\n  moveUp: (foods, index) => dispatch(moveUp(foods, index)),\n  moveDown: (foods, index) => dispatch(moveDown(foods, index))\n});\n\nexport default connect(\n  getData,\n  getMethods\n)(Food);","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  NavLink,\n  Switch\n} from 'react-router-dom';\nimport Food from './components/orderingFood/Food';\n\n\nfunction App() {\n  return (\n    <Router>\n      <nav>\n        <ul>\n          <li>\n            <NavLink to='/' exact >Home</NavLink>\n          </li>\n          <li>\n            <NavLink to='/food' >Food</NavLink>\n          </li>\n        </ul>\n      </nav>\n      <Switch>\n        <Route path='/' exact component={HomePage} />\n        <Route path='/food' component={Food}/>\n      </Switch>\n    </Router>\n  );\n}\n\nconst HomePage = () => <h1>Home Page</h1>\n// const Food = () => <h2>Food Page</h2>\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './components/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root'));\n\n"],"sourceRoot":""}